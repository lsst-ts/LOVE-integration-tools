x-service: &service
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

x-base-producer-env: &base-producer-environment
  LSST_DDS_PARTITION_PREFIX: ${LSST_DDS_PARTITION_PREFIX}
  WEBSOCKET_HOST: ${LOVE_PRODUCER_WEBSOCKET_HOST}
  PROCESS_CONNECTION_PASS: ${PROCESS_CONNECTION_PASS}
  LOVE_CSC_PRODUCER: Test.1

x-base-producer: &base-producer
  image: lsstts/love-producer:develop
  environment:
    <<: *base-producer-environment
  network_mode: ${NETWORK_NAME}
  restart: always
  volumes:
    - ./config:/usr/src/love/producer/config/
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"
  depends_on:
    - nginx

version: "3.7"

services:
  #----- simulators -------
  atcs-sim:
    image: lsstts/love-atcs-sim:develop
    container_name: atcs-sim-build
    entrypoint: ["/home/saluser/atcs-setup.sh"]
    environment:
      - OSPL_URI=${OSPL_URI}
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ${OSPL_CONFIG_PATH}:${OSPL_MOUNT_POINT}
      - ./config:/home/saluser/config/
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  mtcs-sim:
    image: lsstts/love-mtcs-sim:develop
    container_name: mtcs-sim-build
    entrypoint: ["/home/saluser/mtcs-setup.sh"]
    environment:
      - OSPL_URI=${OSPL_URI}
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ${OSPL_CONFIG_PATH}:${OSPL_MOUNT_POINT}
      - ./config:/home/saluser/config/
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  watcher-sim:
    image: lsstts/love-watcher-sim:develop
    container_name: watcher-sim
    entrypoint: ["/home/saluser/watcher-setup.sh"]
    environment:
      - OSPL_URI=${OSPL_URI}
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ${OSPL_CONFIG_PATH}:${OSPL_MOUNT_POINT}
      - ./config:/home/saluser/config/
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  weatherstation-sim:
    image: lsstts/love-weatherstation-sim:develop
    container_name: weatherstation-sim
    entrypoint: ["/home/saluser/weatherstation-setup.sh"]
    environment:
      - OSPL_URI=${OSPL_URI}
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ${OSPL_CONFIG_PATH}:${OSPL_MOUNT_POINT}
      - ./config:/home/saluser/config/
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  scriptqueue-sim:
    image: lsstts/love-scriptqueue-sim:develop
    container_name: scriptqueue-sim
    environment:
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ./config:/home/saluser/config/
      - ${TS_STANDARDSCRIPTS}:/home/saluser/repos/ts_scriptqueue/tests/data/standard/
      - ${TS_EXTERNALSCRIPTS}:/home/saluser/repos/ts_scriptqueue/tests/data/external/
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  # gencam-sim:
  #   image: lsstts/gencam:latest
  #   container_name: gencam-sim
  #   environment:
  #     - OSPL_URI=${OSPL_URI}
  #     - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
  #   network_mode: ${NETWORK_NAME}
  #   # restart: always
  #   volumes:
  #     - ${OSPL_CONFIG_PATH}:${OSPL_MOUNT_POINT}
  #     - ./simulatorcamera.py:/home/saluser/repos/ts_GenericCamera/python/lsst/ts/GenericCamera/driver/simulatorcamera.py
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-file: "5"
  #       max-size: "10m"
  #   ports:
  #     - 5013:5013

  jupyter:
    container_name: love-jupyter
    image: lsstts/love-jupyter:develop
    environment:
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
      - JUPYTER_PASS=${JUPYTER_PASS}
    network_mode: ${NETWORK_NAME}
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
    volumes:
      - ${JUPYTER_PATH}:/home/saluser/notebooks
    ports:
      - 1234:1234

  #----- LOVE PRODUCER --------------
  LOVE:
    <<: *base-producer
    container_name: producer-love-image-mount
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: LOVE:0
  ATPtg:
    <<: *base-producer
    container_name: producer-atptg-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATPtg:0
  ATArchiver:
    <<: *base-producer
    container_name: producer-atarchiver-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATArchiver:0
  ATHeaderService:
    <<: *base-producer
    container_name: producer-atheaderservice-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATHeaderService:0
  ATDome:
    <<: *base-producer
    container_name: producer-atdome-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATDome:0
  ATDomeTrajectory:
    <<: *base-producer
    container_name: producer-atdometrajectory-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATDomeTrajectory:0
  ATPneumatics:
    <<: *base-producer
    container_name: producer-atpneumatics-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATPneumatics:0
  ATMCS:
    <<: *base-producer
    container_name: producer-atmcs-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATMCS:0
  ATHexapod:
    <<: *base-producer
    container_name: producer-athexapod-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATHexapod:0
  ATAOS:
    <<: *base-producer
    container_name: producer-ataos-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATAOS:0
  ATSpectrograph:
    <<: *base-producer
    container_name: producer-atspectrograph-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATSpectrograph:0
  ATCamera:
    <<: *base-producer
    container_name: producer-atcamera-image-mount
    depends_on:
      - atcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ATCamera:0
  ATScriptQueue:
    <<: *base-producer
    container_name: producer-atscriptqueue-image-mount
    depends_on:
      - scriptqueue-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ScriptQueue:2
  CameraHexapod:
    <<: *base-producer
    container_name: producer-camerahexapod-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTHexapod:1
  M2Hexapod:
    <<: *base-producer
    container_name: producer-m2hexapod-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTHexapod:2
  MTHeaderService:
    <<: *base-producer
    container_name: producer-mtheaderservice-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTHeaderService:0
  MTPtg:
    <<: *base-producer
    container_name: producer-mtptg-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTPtg:0
  MTMount:
    <<: *base-producer
    container_name: producer-mtmount-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTMount:0
  MTDome:
    <<: *base-producer
    container_name: producer-mtdome-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTDome:0
  MTDomeTrajectory:
    <<: *base-producer
    container_name: producer-mtdometrajectory-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTDomeTrajectory:0
  MTRotator:
    <<: *base-producer
    container_name: producer-mtrotator-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTRotator:0
  MTM1M3:
    <<: *base-producer
    container_name: producer-mtm1m3-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTM1M3:0
  MTM2:
    <<: *base-producer
    container_name: producer-mtm2-image-mount
    depends_on:
      - mtcs-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: MTM2:0
  MTScriptQueue:
    <<: *base-producer
    container_name: producer-mtscriptqueue-image-mount
    depends_on:
      - scriptqueue-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: ScriptQueue:1
  Watcher:
    <<: *base-producer
    container_name: producer-watcher-image-mount
    depends_on:
      - watcher-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: Watcher:0
  WeatherStation1:
    <<: *base-producer
    container_name: producer-weatherstation1-image-mount
    depends_on:
      - weatherstation-sim
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: WeatherStation:1

  #-----LOVE COMMANDER -----------
  commander:
    container_name: love-commander
    image: lsstts/love-commander:develop
    environment:
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
    network_mode: ${NETWORK_NAME}
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  #----- LOVE MANAGER --------------
  redis:
    container_name: redis
    image: redis:5.0.3
    command: redis-server --appendonly yes --requirepass ${REDIS_PASS}
    network_mode: ${NETWORK_NAME}
    ports:
      - "6379:6379"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  database:
    container_name: love-database
    image: postgres:12.0
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    network_mode: ${NETWORK_NAME}
    restart: always
    volumes:
      - ./db_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  manager:
    container_name: love-manager
    image: lsstts/love-manager:develop
    depends_on:
      - redis
      - database
      - commander
    environment:
      - SERVER_URL=${SERVER_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASS=${REDIS_PASS}
      - AUTH_LDAP_SERVER_URI=${LOVE_MANAGER_LDAP_SERVER_URI}
      - PROCESS_CONNECTION_PASS=${PROCESS_CONNECTION_PASS}
      - SECRET_KEY=${MANAGER_SECRET_KEY}
      - ADMIN_USER_PASS=${ADMIN_USER_PASS}
      - USER_USER_PASS=${USER_USER_PASS}
      - CMD_USER_PASS=${CMD_USER_PASS}
      - AUTHLIST_USER_PASS=${AUTHLIST_USER_PASS}
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - COMMANDER_HOSTNAME=love-commander
      - COMMANDER_PORT=5000
    network_mode: ${NETWORK_NAME}
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./config:/usr/src/love/manager/config
      - ./media:/usr/src/love/manager/media
      - manager-static:/usr/src/love/manager/static
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  #----- LOVE FRONTEND --------------
  frontend:
    container_name: love-frontend
    image: lsstts/love-frontend:develop
    network_mode: ${NETWORK_NAME}
    volumes:
      - frontend-volume:/usr/src/love
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  nginx:
    container_name: love-nginx
    image: nginx:1.13.1
    depends_on:
      - frontend
      - manager
    network_mode: ${NETWORK_NAME}
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx-develop.conf:/etc/nginx/conf.d/default.conf
      - frontend-volume:/usr/src/love-frontend
      - ./media:/usr/src/love-manager/media
      - manager-static:/usr/src/love-manager/static
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

volumes:
  frontend-volume:
  manager-static:

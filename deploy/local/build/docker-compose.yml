
x-service: &service
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

x-base-producer-env: &base-producer-environment
  LSST_DDS_PARTITION_PREFIX: ${LSST_DDS_PARTITION_PREFIX}
  WEBSOCKET_HOST: ${LOVE_PRODUCER_WEBSOCKET_HOST}
  PROCESS_CONNECTION_PASS: ${PROCESS_CONNECTION_PASS}
  LOVE_CSC_PRODUCER: Test.1
  LSST_DDS_DOMAIN_ID: ${LSST_DDS_DOMAIN_ID}
  LSST_DDS_DOMAIN_NAME: ${LSST_DDS_DOMAIN_NAME}

x-base-producer: &base-producer
  build:
    context: ${DOCKERFILE_PATH_PRODUCER}
    dockerfile: docker/Dockerfile
    args:
      dev_cycle: "${dev_cycle}"
      registry: "${docker_registry}"
  image: love-producer
  environment:
    <<: *base-producer-environment
  networks:
    - love
  entrypoint: ["/home/saluser/run_producer.sh"]
  restart: always
  tty: true
  ipc: host
  pid: host
  volumes:
    - ${DOCKERFILE_PATH_PRODUCER}:/home/saluser/love-producer
    - ./config:/home/saluser/love-producer/config/
    - ${OSPL_SHMEM_SOCKET_DIR}:/tmp/
    - ${OSPL_SHMEM_CONFIG}:${OSPL_LOC}
    - ./run_producer.sh:/home/saluser/run_producer.sh
  logging:
    driver: "json-file"
    options:
      max-file: "5"
      max-size: "10m"

version: "3.7"

services:
  # -------------- producers --------------
  love:
    <<: *base-producer
    container_name: producer-love
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: LOVE:0
  genericcamera1:
    <<: *base-producer
    container_name: producer-genericcamera1
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: GenericCamera:1
  genericcamera301:
    <<: *base-producer
    container_name: producer-genericcamera301
    environment:
      <<: *base-producer-environment
      LOVE_CSC_PRODUCER: GenericCamera:301
 
  #----- LOVE COMMANDER ---------
  commander:
    container_name: love-commander
    build:
      context: ${DOCKERFILE_PATH_COMMANDER}
      dockerfile: docker/Dockerfile-dev
      args:
        dev_cycle: "${dev_cycle}"
        registry: "${docker_registry}"
    image: love-commander
    environment:
      - LSST_DDS_PARTITION_PREFIX=${LSST_DDS_PARTITION_PREFIX}
      - LSST_DDS_DOMAIN_ID=${LSST_DDS_DOMAIN_ID}
      - LSST_DDS_DOMAIN_NAME=${LSST_DDS_DOMAIN_NAME}
    networks:
      - love
    entrypoint: ["/home/saluser/run_commander.sh"]
    tty: true
    ipc: host
    pid: host
    restart: always
    volumes:
      - ${DOCKERFILE_PATH_COMMANDER}:/usr/src/love
      - ${OSPL_SHMEM_SOCKET_DIR}:/tmp/
      - ${OSPL_SHMEM_CONFIG}:${OSPL_LOC}
      - ./run_commander.sh:/home/saluser/run_commander.sh
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"
  
  #----- LOVE MANAGER --------------
  redis:
    container_name: redis
    image: redis:5.0.3
    command: redis-server --appendonly yes --requirepass ${REDIS_PASS}
    networks:
      - love
    ports:
      - "6379:6379"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  database:
    container_name: love-database
    image: postgres:12.0
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - love
    restart: always
    volumes:
      - ./db_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  manager:
    container_name: love-manager
    build:
      context: ${DOCKERFILE_PATH_MANAGER}
      dockerfile: docker/Dockerfile
    image: love-manager
    depends_on:
      - redis
      - database
      - commander
    environment:
      - SERVER_URL=${SERVER_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASS=${REDIS_PASS}
      - AUTH_LDAP_SERVER_URI=${LOVE_MANAGER_LDAP_SERVER_URI}
      - PROCESS_CONNECTION_PASS=${PROCESS_CONNECTION_PASS}
      - SECRET_KEY=${MANAGER_SECRET_KEY}
      - ADMIN_USER_PASS=${ADMIN_USER_PASS}
      - USER_USER_PASS=${USER_USER_PASS}
      - CMD_USER_PASS=${CMD_USER_PASS}
      - AUTHLIST_USER_PASS=${AUTHLIST_USER_PASS}
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - COMMANDER_HOSTNAME=love-commander
      - COMMANDER_PORT=5000
      - LOVE_CSC_PRODUCER=${LOVE_CSC_PRODUCER}
      - LOVE_SITE=${LOVE_SITE}
    networks:
      - love
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ${DOCKERFILE_PATH_MANAGER}/manager:/usr/src/love/manager
      - ./config:/usr/src/love/manager/config
      - ./media:/usr/src/love/manager/media
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  #----- LOVE FRONTEND --------------
  frontend:
    container_name: love-frontend
    build:
      context: ${DOCKERFILE_PATH_FRONTEND}
      dockerfile: docker/Dockerfile-dev
    image: love-frontend
    networks:
      - love
    ports:
      - "3000:3000"
    tty: true
    volumes:
      - ${DOCKERFILE_PATH_FRONTEND}/love:/usr/src/love
    environment:
      CI: "true"
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  nginx:
    container_name: love-nginx
    image: nginx:1.13.1
    depends_on:
      - frontend
      - manager
    networks:
      - love
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./media:/usr/src/love-manager/media
      - ${DOCKERFILE_PATH_FRONTEND}:/usr/src/love-frontend
      - ${DOCKERFILE_PATH_MANAGER}/manager:/usr/src/love-manager/static
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

networks:
  love:
    external: true
